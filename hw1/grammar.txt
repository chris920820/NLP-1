# Symbols in the grammar are case-sensitive.
#
# This grammar uses a convention that
#    - terminals are lowercase          (president)
#    - preterminals are capitalized     (Noun)
#    - other nonterminals are all-caps  (NP)
#
# This convention just makes grammars more readable to humans.  Thus:
#
#    - When *you* are writing grammars in questions 3 and 6, you should
#      follow this convention unless you have a good reason not to.
#
#    - But your *program* should still work with grammars that don't
#      follow this convention.  So how can your program reliably tell
#      the difference between terminal and nonterminal symbols?  If
#      there is at least one rule for rewriting a symbol, then that
#      symbol is a nonterminal and should be rewritten.
#######################

# Rules for creating full sentences.

4	ROOT	S .
1	ROOT	S !
1	ROOT	is it true that S ?     # mixing terminals and nonterminals is ok.

# The basic grammar rules.  Here's what the abbreviations stand for:
#    S  = sentence
#    NP = noun phrase
#    VP = verb phrase
#    PP = prepositional phrase
#    Det = determiner (sometimes called "article")
#    Prep = preposition
#    Adj = adjective

1	S	NP VP
5	VP	VBT NP
1	VP	VP CC VP
1	VP	VBI
1	VP	VBT IN S
1	VP	VBI PP



7	NP	Det Noun
1	NP	NP PP
1	NP	NP CC NP


1	PP	Prep NP
3.5	Noun	ADJP Noun

# Vocabulary.  Your program can see that "ate" is a terminal
# symbol because there exists no rule for rewriting it.
# Any symbol that can rewrite as a terminal (or a string of
# terminals, like "chief of staff") is called a "preterminal."  Notice
# that a preterminal is a special kind of nonterminal.


# We can sub-divide verb in to transitive verb (VBT) and in-transitive verb (VBI)
# Note, many of them can be VBI and VBT at the same time
1	VBT	rate
1	VBT	wanted
1	VBT	kissed
1	VBT	understood
1	VBT	pickled
1	VBT	ate


1	VBI	kissed
1	VBI	understood
1	VBI	ate
1	VBI	sighed



1	Det	the
1	Det	a
1	Det	every

1	Noun	president
1	Noun	sandwich
1	Noun	pickle
1	Noun	chief of staff
1	Noun	floor
1	Noun	Sally

1	Adj	fine
1	Adj	delicious
1	Adj	perplexed
1	Adj	pickled

1	ADJP	RB ADJP
2	ADJP	Adj

1	CC	and

1	Prep	with
1	Prep	on
1	Prep	under
1	Prep	in

1	IN	that
1	RB	very
